<?xml version="1.0" encoding="utf-8"?>
<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="@color/white">

    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:orientation="vertical"
        android:padding="16dp">

        <TextView
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginBottom="16dp"
            android:text="Demo 2: Jobs &amp; Cancellation"
            android:textAlignment="center"
            android:textSize="24sp"
            android:textStyle="bold"
            android:textColor="@color/black" />

        <com.google.android.material.card.MaterialCardView
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginBottom="16dp"
            app:cardCornerRadius="12dp"
            app:cardElevation="4dp">

            <LinearLayout
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:orientation="vertical"
                android:padding="16dp">

                <TextView
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:text="Concept: Manual Job Cancellation"
                    android:textSize="18sp"
                    android:textStyle="bold"
                    android:textColor="@color/black" />

                <TextView
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="8dp"
                    android:text="When you launch a coroutine, you get a Job that represents the running coroutine. You can cancel the coroutine using Job.cancel() without affecting other coroutines in the same scope."
                    android:textSize="14sp"
                    android:textColor="@color/black" />

                <TextView
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="8dp"
                    android:text="Try it: Start the animation, then cancel it after 2 seconds using the cancel button!"
                    android:textSize="14sp"
                    android:textStyle="italic"
                    android:textColor="@color/black" />
            </LinearLayout>
        </com.google.android.material.card.MaterialCardView>

        <com.google.android.material.button.MaterialButton
            android:id="@+id/btn_start_job"
            android:layout_width="match_parent"
            android:layout_height="80dp"
            android:layout_marginBottom="8dp"
            android:text="Start Animation Job"
            android:textSize="16sp"
            app:cornerRadius="12dp" />

        <com.google.android.material.button.MaterialButton
            android:id="@+id/btn_cancel_job"
            android:layout_width="match_parent"
            android:layout_height="80dp"
            android:layout_marginBottom="16dp"
            android:text="Cancel Job After 2s"
            android:textSize="16sp"
            app:cornerRadius="12dp" />

        <com.google.android.material.button.MaterialButton
            android:id="@+id/btn_flashing_button"
            android:layout_width="match_parent"
            android:layout_height="120dp"
            android:layout_marginBottom="16dp"
            android:text="Flashing Button"
            android:textSize="16sp"
            app:cornerRadius="12dp" />

        <TextView
            android:id="@+id/tv_job_status"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginBottom="16dp"
            android:text="Status: Ready to start"
            android:textAlignment="center"
            android:textSize="16sp"
            android:textColor="@color/black" />

        <com.google.android.material.card.MaterialCardView
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            app:cardCornerRadius="12dp"
            app:cardElevation="4dp">

            <LinearLayout
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:orientation="vertical"
                android:padding="16dp">

                <TextView
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:text="Code Explanation"
                    android:textSize="16sp"
                    android:textStyle="bold"
                    android:textColor="@color/black" />

                <TextView
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="8dp"
                    android:text="• val job = scope.launch { } returns a Job\n• job.cancel() cancels only this specific coroutine\n• Other coroutines in the same scope continue running\n• This demonstrates fine-grained control over coroutines\n• The flashing button continues even after the animation job is cancelled"
                    android:textSize="12sp"
                    android:textColor="@color/black"
                    android:fontFamily="monospace" />
            </LinearLayout>
        </com.google.android.material.card.MaterialCardView>

    </LinearLayout>
</ScrollView> 